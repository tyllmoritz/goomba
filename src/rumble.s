; generated by Norcroft  Thumb C vsn 1.20 (ARM Ltd SDT2.50) [Build number 80]


|x$codeseg| DATA

;;;1      #include "gba.h"
;;;2      
;;;3      extern char gameboyplayer;
;;;4      
;;;5      u32 SerialIn, DoRumble, RumbleCnt;
;;;6      u16 stage, ind;
;;;7      u16 SerOut0, SerOut1;
;;;8      char const GBPData[]={"NINTENDO"};
;;;9      
;;;10     void RumbleInterrupt(void) {
000000                      RumbleInterrupt
000000  b4f0                        PUSH     {r4-r7}
;;;11     	u32 OutData=0;
;;;12     	u16 SerIn0, SerIn1;
;;;13     	u16 *GBPD2 = (u16*)GBPData;
;;;14     	
;;;15     	SerialIn = REG_SIODATA32;
000002  4f38                        LDR      r7,F1L1+4
000004  4a38                        LDR      r2,F1L1+8
000006  6a39                        LDR      r1,[r7,#&20]
000008  2000                        MOV      r0,#0   ;;;11
;;;16     	switch(stage) {
00000a  6011                        STR      r1,[r2,#0]
00000c  8996                        LDRH     r6,[r2,#&c]
00000e  2502                        MOV      r5,#2
000010  4c33                        LDR      r4,F1L1   ;;;13
000012  2e05                        CMP      r6,#5
000014  d253                        BCS      F1L44
000016  a302                        ADR      r3,F1L43
000018  5d9b                        LDRB     r3,[r3,r6]
00001a  005b                        LSL      r3,#1
00001c  449f                        ADD      pc,r3
00001e  1c00                        MOV      r0,r0
                            F1L43
000020  2f03                    DCB       0x03,0x2f
000022  3e37                    DCB       0x37,0x3e
000024  0057                    DCB       0x57,00
;;;17     		case 0:
;;;18     			SerIn0 = SerialIn>>16;
000026  0c0d                        LSR      r5,r1,#16
;;;19     			SerIn1 = SerialIn;
;;;20     			if(SerIn0 == SerOut1){
000028  8a53                        LDRH     r3,[r2,#&12]
00002a  0408                        LSL      r0,r1,#16   ;;;19
00002c  0c00                        LSR      r0,#16   ;;;19
00002e  429d                        CMP      r5,r3
000030  d117                        BNE      F1L50
;;;21     				if(ind <=3){
000032  89d5                        LDRH     r5,[r2,#&e]
000034  2d03                        CMP      r5,#3
000036  dc0e                        BGT      F1L51
;;;22     					if( SerialIn == ~(SerOut1 | (SerOut0<<16)) ){
000038  8a16                        LDRH     r6,[r2,#&10]
00003a  0436                        LSL      r6,#16
00003c  4333                        ORR      r3,r6
00003e  43db                        MVN      r3,r3
000040  428b                        CMP      r3,r1
000042  d104                        BNE      F1L52
;;;23     						ind++;
000044  1c69                        ADD      r1,r5,#1
000046  81d1                        STRH     r1,[r2,#&e]
;;;24     					}
;;;25     				}else{
;;;26     					if(SerIn1 == 0x8002){
;;;27     						OutData = 0x10000010;
;;;28     						stage=1;
;;;29     						break;
;;;30     					}
;;;31     				}
;;;32     			}else{
;;;33     				ind = 0;
;;;34     			}
;;;35     			if(ind <=3){
000048  89d1                        LDRH     r1,[r2,#&e]
00004a  2903                        CMP      r1,#3
00004c  dc0c                        BGT      F1L53
                            F1L52
                            F1L21
;;;36     				SerOut0 = GBPD2[ind];
00004e  89d1                        LDRH     r1,[r2,#&e]
000050  0049                        LSL      r1,#1
000052  5a61                        LDRH     r1,[r4,r1]
000054  e00a                        B        F1L54
                            F1L51
000056  4b25                        LDR      r3,F1L1+12   ;;;26
000058  4298                        CMP      r0,r3   ;;;26
00005a  d105                        BNE      F1L55   ;;;26
00005c  4824                        LDR      r0,F1L1+16   ;;;27
00005e  2101                        MOV      r1,#1   ;;;28
000060  e01a                        B        F1L56   ;;;28
                            F1L50
000062  2100                        MOV      r1,#0   ;;;33
000064  81d1                        STRH     r1,[r2,#&e]   ;;;33
000066  e7f2                        B        F1L21   ;;;33
                            F1L53
                            F1L55
;;;37     			}else{
;;;38     				SerOut0 = 0x8000;
000068  2101                        MOV      r1,#1
00006a  03c9                        LSL      r1,#15
                            F1L54
;;;39     			}
;;;40     			SerOut1 = ~SerIn1;
00006c  43c0                        MVN      r0,r0
00006e  0400                        LSL      r0,#16
000070  0c00                        LSR      r0,#16
000072  8211                        STRH     r1,[r2,#&10]   ;;;38
000074  8250                        STRH     r0,[r2,#&12]
;;;41     			OutData = SerOut1 | (SerOut0<<16);
000076  8a11                        LDRH     r1,[r2,#&10]
000078  0409                        LSL      r1,#16
00007a  4308                        ORR      r0,r1
00007c  e01f                        B        F1L57
;;;42     			break;
;;;43     
;;;44     		case 1:
;;;45     			if(SerialIn == 0x10000010){
00007e  4b1c                        LDR      r3,F1L1+16
000080  4299                        CMP      r1,r3
000082  d102                        BNE      F1L58
;;;46     				OutData = 0x20000013;
000084  481b                        LDR      r0,F1L1+20
;;;47     				stage=2;
000086  8195                        STRH     r5,[r2,#&c]
000088  e019                        B        F1L57
                            F1L58
                            F1L23
;;;48     			}else{
;;;49     				stage = 4;
00008a  2104                        MOV      r1,#4
00008c  e004                        B        F1L56
;;;50     			}
;;;51     			break;
;;;52     
;;;53     		case 2:
;;;54     			if(SerialIn == 0x20000013){
00008e  4b19                        LDR      r3,F1L1+20
000090  4299                        CMP      r1,r3
000092  d1fa                        BNE      F1L23
;;;55     				OutData = 0x40000004;
000094  4818                        LDR      r0,F1L1+24
;;;56     				stage=3;
000096  2103                        MOV      r1,#3
                            F1L56
;;;57     			}else{
;;;58     				stage = 4;
;;;59     			}
;;;60     			break;
;;;61     
;;;62     		case 3:
;;;63     			if(SerialIn == 0x30000003){
;;;64     				if(DoRumble) RumbleCnt = 2;
;;;65     				if(RumbleCnt){
;;;66     					RumbleCnt--;
;;;67     					OutData = 0x40000026;
;;;68     				}else{
;;;69     					OutData = 0x40000004;
;;;70     				}
;;;71     			}else{
;;;72     				stage = 4;
000098  8191                        STRH     r1,[r2,#&c]
00009a  e010                        B        F1L57
00009c  4b17                        LDR      r3,F1L1+28   ;;;63
00009e  4299                        CMP      r1,r3   ;;;63
0000a0  d1f3                        BNE      F1L23   ;;;63
0000a2  6850                        LDR      r0,[r2,#4]   ;;;64
0000a4  2800                        CMP      r0,#0   ;;;64
0000a6  d001                        BEQ      F1L59   ;;;64
0000a8  6095                        STR      r5,[r2,#8]   ;;;64
0000aa  e002                        B        F1L60   ;;;64
                            F1L59
0000ac  6890                        LDR      r0,[r2,#8]   ;;;65
0000ae  2800                        CMP      r0,#0   ;;;65
0000b0  d004                        BEQ      F1L61   ;;;65
                            F1L60
0000b2  6890                        LDR      r0,[r2,#8]   ;;;66
0000b4  3801                        SUB      r0,#1   ;;;66
0000b6  6090                        STR      r0,[r2,#8]   ;;;67
0000b8  4811                        LDR      r0,F1L1+32   ;;;67
0000ba  e000                        B        F1L57   ;;;67
                            F1L61
0000bc  480e                        LDR      r0,F1L1+24   ;;;69
                            F1L44
                            F1L57
;;;73     			}
;;;74     			break;
;;;75     
;;;76     		case 4:
;;;77     			SerialIn = 0;
;;;78     			DoRumble = 0;
;;;79     			stage = 0;
;;;80     			ind = 0;
;;;81     			SerOut0 = 0;
;;;82     			SerOut1 = 0;
;;;83     			return;
;;;84     	}
;;;85     
;;;86     	REG_SIODATA32 = OutData;
0000be  6238                        STR      r0,[r7,#&20]
;;;87     	REG_SIOCNT |= 0x80;
0000c0  4810                        LDR      r0,F1L1+36
0000c2  2380                        MOV      r3,#&80
0000c4  8901                        LDRH     r1,[r0,#8]
0000c6  4319                        ORR      r1,r3
0000c8  8101                        STRH     r1,[r0,#8]
                            F1L41
0000ca  bcf0                        POP      {r4-r7}
0000cc  4770                        BX       lr
0000ce  2100                        MOV      r1,#0   ;;;77
0000d0  6011                        STR      r1,[r2,#0]   ;;;79
0000d2  6051                        STR      r1,[r2,#4]   ;;;79
0000d4  8191                        STRH     r1,[r2,#&c]   ;;;79
0000d6  81d1                        STRH     r1,[r2,#&e]   ;;;80
0000d8  8211                        STRH     r1,[r2,#&10]   ;;;81
0000da  8251                        STRH     r1,[r2,#&12]   ;;;82
0000dc  e7f5                        B        F1L41   ;;;82
0000de  0000                        LSL      r0,#0   ;;;82
                            F1L1
0000e0  00000000                    DCD      |x$constdata|   ;;;82
0000e4  04000100                    DCD      0x04000100   ;;;82
0000e8  00000000                    DCD      |x$dataseg|   ;;;82
0000ec  00008002                    DCD      0x00008002   ;;;82
0000f0  10000010                    DCD      0x10000010   ;;;82
0000f4  20000013                    DCD      0x20000013   ;;;82
0000f8  40000004                    DCD      0x40000004   ;;;82
0000fc  30000003                    DCD      0x30000003   ;;;82
000100  40000026                    DCD      0x40000026   ;;;82
000104  04000120                    DCD      0x04000120   ;;;82

;;;88     }
;;;89     
;;;90     void StartRumbleComs(void) {
;;;91     	if( (SerialIn != 0x30000003) && gameboyplayer){
000108                      StartRumbleComs
000108  480d                        LDR      r0,F2L1
00010a  4b0e                        LDR      r3,F2L1+4
00010c  6800                        LDR      r0,[r0,#0]
00010e  4298                        CMP      r0,r3
000110  d014                        BEQ      F2L11
000112  480d                        LDR      r0,F2L1+8
000114  7800                        LDRB     r0,[r0,#0]
000116  2800                        CMP      r0,#0
000118  d010                        BEQ      F2L12
;;;92     		REG_RCNT = 0x0;
00011a  480c                        LDR      r0,F2L1+12
00011c  2100                        MOV      r1,#0
00011e  8281                        STRH     r1,[r0,#&14]
;;;93     		REG_SIOCNT = 0x1008;
000120  490b                        LDR      r1,F2L1+16
;;;94     		REG_SIOCNT |= 0x4000;
000122  0b03                        LSR      r3,r0,#12
000124  8101                        STRH     r1,[r0,#8]   ;;;93
000126  8901                        LDRH     r1,[r0,#8]
000128  4319                        ORR      r1,r3
00012a  8101                        STRH     r1,[r0,#8]
;;;95     		REG_SIOCNT &=~1;
00012c  8901                        LDRH     r1,[r0,#8]
00012e  0849                        LSR      r1,#1
000130  0049                        LSL      r1,#1
000132  8101                        STRH     r1,[r0,#8]
;;;96     		REG_SIOCNT |= 0x0080;
000134  8901                        LDRH     r1,[r0,#8]
000136  2380                        MOV      r3,#&80
000138  4319                        ORR      r1,r3
00013a  8101                        STRH     r1,[r0,#8]
                            F2L11
                            F2L12
00013c  4770                        BX       lr
00013e  0000                        LSL      r0,#0
                            F2L1
000140  00000000                    DCD      |x$dataseg|
000144  30000003                    DCD      0x30000003
000148  00000000                    DCD      gameboyplayer
00014c  04000120                    DCD      0x04000120
000150  00001008                    DCD      0x00001008
;;;97     	}
;;;98     }
;;;99     
        AREA |C$$constdata|, DATA, READONLY

|x$constdata|
GBPData
        DCB      0x4e,0x49,0x4e,0x54
        DCB      0x45,0x4e,0x44,0x4f
        DCB      00,00,00,00

        AREA |C$$data|, DATA

|x$dataseg|
SerialIn
        DCD      00000000
DoRumble
        DCD      00000000
RumbleCnt
        DCD      00000000
stage
        DCW      0000
ind
        DCW      0000
SerOut0
        DCW      0000
SerOut1
        DCW      0000


        END
